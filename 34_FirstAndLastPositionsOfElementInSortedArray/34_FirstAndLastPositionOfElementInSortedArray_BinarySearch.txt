class Solution {
    public int[] searchRange(int[] nums, int target) 
    {
        // Binary-Search Approach
        int i = 0;
        int j = nums.length - 1;
        
        while(i <= j)
        {
            int mid = (i+j)/2;
            if (nums[mid] < target)
            {
                i = mid + 1;
            }
            else if (nums[mid] > target)
            {
                j = mid - 1;
            }
            else
            {
                int forward = mid;
                int backward = mid;
                while(forward <= nums.length -1 && nums[forward] == target) 
                // skip all numbers matching target until you reach the last target-matching element    
                {
                    forward++;
                }
                while(backward >= 0 && nums[backward] == target)
                // find if there are any target-matching number before
                {
                    backward--;   
                } 
                return new int[] {backward +1, forward - 1};
            }
        }
        return new int[] {-1,-1};
    }
}