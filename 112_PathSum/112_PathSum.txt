/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
     // global variables
    int pathSum = 0;
    boolean found = false;
    
    public boolean hasPathSum(TreeNode root, int sum) 
    {
        if (root != null)
        {
            pathSum += root.val;
            if (root.left != null)
            {
                hasPathSum(root.left, sum);
                pathSum -= root.left.val; // subtract val if unwind
            }
            if (root.right != null)
            {
                hasPathSum(root.right, sum);
                pathSum -= root.right.val; // subtract val if unwind
            }
            if (root.left == null && root.right == null && pathSum == sum) // has reach a left node = completed a path
            {
                found = true; // only change boolean found when there is a match
                return found;
            }
            return found; 
            // keep returning the boolean found up the stack.
            // if no match is found, it will keep returning found = false anyway!  
        }
        else
        {
            return false;
        }    
    }
}