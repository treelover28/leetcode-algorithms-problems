/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) 
    {
        List<Integer> res = new LinkedList<>();
        if (root == null) return res;
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        
        while (!stack.empty())
        {
            TreeNode curr = stack.pop();
            res.add(curr.val);
            
            if (curr.right != null) // since stack acts in a FIFO manner
                // we add right child first, then left
                // so when we pop the stack, the left child would be visited first.
            {
                stack.push(curr.right);
            }
            if (curr.left != null)
            {
                stack.push(curr.left);
            }
        }
        
        return res;
    }
}