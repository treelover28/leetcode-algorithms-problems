/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution 
{
    public boolean hasCycle(ListNode head) 
    {
        ListNode temp = head;
        HashMap<ListNode, Integer> visitCount = new HashMap<>();
    
        while (temp != null)
        {
            visitCount.put(temp, visitCount.getOrDefault(temp,0) + 1);		
            if (visitCount.get(temp) > 2) return true;
            temp = temp.next;
        }
       
        return false;
            
    }
}